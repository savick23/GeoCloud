@page "/catalog/{name?}"
@inherits RmPageBase
<PageTitle>Справочник «@(_info?.Name ?? string.Empty)»</PageTitle>

<RadzenText TextStyle="TextStyle.H5">Справочник «@(_info?.Name ?? string.Empty)»</RadzenText>

@if (_data == null)
{
    <p><em>Загрузка данных...</em></p>
}
else
{
    <RadzenMenu Click="OnMenuCick">
        <RadzenMenuItem Text="Новый" Icon="add" Value=CMD_NEW />
        <RadzenMenuItem Text="Копировать" Icon="content_copy" Value=CMD_COPY />
        <RadzenMenuItem Text="Изменить" Icon="edit" Value=CMD_EDIT />
        <RadzenMenuItem Text="Удалить" Icon="delete" Value=CMD_DELETE />
    </RadzenMenu>
    <RadzenDataGrid @ref="_grid" TItem="object" Data="@_data" Density="Density.Compact" AllowColumnResize="true" EditMode="DataGridEditMode.Single" SelectionMode="DataGridSelectionMode.Single"
                RowCreate="@OnInsertRow" RowUpdate="@OnUpdateRow" @bind-Value=@_selectedRows>
        <Columns>
            @foreach (var column in _info.Attributes.Where(a => a.Visible))
            {
                <RadzenDataGridColumn TItem="object" Title="@column.Name" Property="@column.Field">
                    <Template>
                        @GetValue(@context, column.Field)
                    </Template>
                </RadzenDataGridColumn>
            }
        </Columns>
    </RadzenDataGrid>
}

@code {
    [Parameter]
    public string? Name { get; set; }

    RadzenDataGrid<object> _grid;
    IList<object>? _selectedRows;
    TObjectDto? _info;
    IEnumerable<object>? _data;

    protected override async Task OnParametersSetAsync()
    {
        _info = await Client.GetObjectAsync(Name);
        _data = (IEnumerable<object>?)await Client.QueryAsync(Name);
        StateHasChanged();
    }

    async void OnMenuCick(MenuItemEventArgs args)
    {
        switch ((string)args.Value)
        {
            case CMD_NEW:
                await _grid.InsertRow(Activator.CreateInstance(_selectedRows?.FirstOrDefault().GetType()));
                break;
            case CMD_EDIT:
                _grid.EditRow(_selectedRows?.FirstOrDefault());
                break;
            case CMD_DELETE:
                break;
        }
    }

    void OnInsertRow(object? item)
    {

    }

    void OnUpdateRow(object? item)
    {

    }

    void OnDeleteRow(object? item)
    {

    }
}
