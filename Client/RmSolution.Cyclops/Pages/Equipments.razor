@page "/equipments"
@inject RmHttpClient client

<PageTitle>Справочник оборудования</PageTitle>

<h1>Справочник оборудования</h1>

@if (_data == null)
{
    <p><em>Загрузка данных...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                @foreach (var cname in _names)
                {
                    <td>@cname</td>
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in _data)
                {
                    <tr>
                        @foreach (var cname in _names)
                        {
                            <td>@GetValue(item, cname)</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    List<string>? _names;
    dynamic? _data;

    protected override async Task OnInitializedAsync()
    {
        _data = await client.Query(typeof(TEquipment));
        if (_data != null)
            foreach (var item in _data)
            {
                _names = ((object)item).GetType().GetProperties().OrderBy(a => a.MetadataToken).Select(a => a.Name).ToList();
                break;
            }
    }

    string GetValue(object item, string name) =>
        item.GetType().GetProperty(name)?.GetValue(item)?.ToString() ?? "(null)";
}
